{"version":3,"sources":["components/Mixer/Button.jsx","components/Mixer/ButtonGroup.jsx","components/Mixer/Label.jsx","ControlLayout.jsx","components/Mixer/MixStrip.jsx","components/Mixer/Fader/FaderKnob.jsx","components/Mixer/Fader/FaderStrip.jsx","components/Mixer/Fader/index.jsx","components/Mixer/VUMeter.jsx","components/Mixer/LCD.jsx","components/Mixer/ChannelStrip.jsx","components/Mixer/MasterStrip.jsx","components/Mixer/Mixer.jsx","App.js","serviceWorker.js","index.js"],"names":["sizeStyles","small","width","height","medium","large","Button","styled","div","props","style","size","children","ButtonGroup","cols","Label","color","backgroundColor","$firstGridArea","$secondGridArea","$thirdGridArea","$fourthGridArea","MixStrip","controlLayout","firstGridArea","secondGridArea","thirdGridArea","fourthGridArea","className","elems","i","push","key","renderMixButtons","FaderKnob","FaderStrip","VUMeter","bars","LCD","canvas","ChannelStrip","Fader","label","MixerComponent","channelStripContainer","display","channelStrip","flexGrow","Mixer","state","this","renderChannelStrips","MasterStrip","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c9466d8.chunk.js","sourcesContent":["import React from 'react'\n\nimport styled from 'styled-components'\n\nconst sizeStyles = {\n  small: {\n    width: '50px',\n    height: '20px'\n    // backgroundColor: 'green'\n  },\n  medium: {\n    width: '60px',\n    height: '24px'\n    // backgroundColor: 'yellow'\n  },\n  large: {\n    width: '70px',\n    height: '28px'\n    // backgroundColor: 'red'\n  }\n}\n\nconst Button = styled.div`\n  cursor: pointer;\n\n  margin: 2px auto;\n  padding: 8px;\n\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n\n  line-height: 14px;\n  border-radius: 5px;\n\n  background-color: rgba(0, 255, 255, 0.5);\n`\n\nexport default function (props) {\n  return (\n    <Button\n      style={{\n        ...(sizeStyles[props.size] || sizeStyles.small),\n        ...props.style\n      }}\n    >\n      {props.children}\n    </Button>\n  )\n}\n","import React from 'react'\n\nimport styled from 'styled-components'\n\nexport default function (props) {\n  const ButtonGroup = styled.div`\n    display: grid;\n    grid-template-columns: repeat(${props.cols || 1}, 1fr);\n    justify-items: center;\n    grid-column-gap: 5px;\n    padding: 0 5px;\n    // gridRowGap: 5px;\n  `\n\n  return <ButtonGroup style={{ ...props.style }}>{props.children}</ButtonGroup>\n}\n","import React from 'react'\n\nimport styled from 'styled-components'\n\nexport default function (props) {\n  const Label = styled.div`\n    text-align: center;\n    color: ${props.color || '#FFF'};\n    background-color: ${props.backgroundColor || '#000'};\n  `\n  return <Label>{props.children}</Label>\n}\n","export default {\n  $firstGridArea: '1 / 1 / 2 / 2',\n  $secondGridArea: '2 / 1 / 5 / 2',\n  $thirdGridArea: '5 / 1 / 11 / 2',\n  $fourthGridArea: '11 / 1 / 12 / 2'\n}\n","import React from 'react'\n\nimport Button from './Button'\nimport ButtonGroup from './ButtonGroup'\nimport Label from './Label'\n\nimport styled from 'styled-components'\nimport controlLayout from '../../ControlLayout'\nconst MixStrip = styled.div`\n  display: grid;\n  grid-template-rows: repeat(11, 1fr);\n  height: 100%;\n\n  .PageSelect {\n    grid-area: ${controlLayout.firstGridArea};\n  }\n\n  .Bank_Main {\n    grid-area: ${controlLayout.secondGridArea};\n  }\n\n  .AuxSubMatrix {\n    grid-area: ${controlLayout.thirdGridArea};\n  }\n\n  .Label {\n    grid-area: ${controlLayout.fourthGridArea};\n  }\n`\n\nfunction renderMixButtons () {\n  // FIXME: REMOVE\n  let n_mixes = 16\n  // FIXME: REMOVE\n\n  let elems = []\n  for (let i = 1; i <= n_mixes; i++) {\n    elems.push(<Button key={i}>Mix {i}</Button>)\n  }\n  return <ButtonGroup cols={2}>{elems}</ButtonGroup>\n}\n\nexport default function () {\n  return (\n    <MixStrip>\n      <div className='PageSelect'>\n        <ButtonGroup cols='2'>\n          <Button>Prev</Button>\n          <Button>Next</Button>\n        </ButtonGroup>\n      </div>\n      <div className='Bank_Main'>\n        <ButtonGroup cols='2'>\n          <Button>Inputs</Button>\n          <Button>DCA Groups</Button>\n          <Button>Mix/FX Masters</Button>\n          <Button>User</Button>\n        </ButtonGroup>\n        <Label>BANK</Label>\n        <Button size='large'>Main Mix</Button>\n      </div>\n      <div className='AuxSubMatrix'>\n        <Label>Aux/Sub/Matrix</Label>\n        {renderMixButtons()}\n        <ButtonGroup cols='2'>\n          <Button>FX A</Button>\n          <Button>FX B</Button>\n          <Button>FX C</Button>\n          <Button>FX D</Button>\n        </ButtonGroup>\n      </div>\n      <div className=''>\n        <Label>MIX SELECT</Label>\n      </div>\n    </MixStrip>\n  )\n}\n","import React from 'react'\n\nexport default function () {\n  return <div></div>\n}\n","import React from 'react'\n\nexport default function () {\n  return <div></div>\n}\n","import React from 'react'\nimport FaderKnob from './FaderKnob'\nimport FaderStrip from './FaderStrip'\n\nexport default function () {\n  return (\n    <div>\n      <FaderKnob />\n      <FaderStrip />\n    </div>\n  )\n}\n","import React from 'react'\n\nimport styled from 'styled-components'\nconst VUMeter = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport default function (props) {\n  let elems = []\n  for (let i = 0; i < (props.bars || 0); i++) {\n    elems.push(<button key={i + 1} />)\n  }\n\n  return <VUMeter>{elems}</VUMeter>\n}\n","import React from 'react'\n\nimport styled from 'styled-components'\nconst LCD = styled.canvas`\n  width: 66px;\n  height: 70px;\n  border-radius: 5px;\n  background-color: black;\n`\n\nexport default function (props) {\n  return <LCD></LCD>\n}\n","import React from 'react'\n\nimport Button from './Button'\nimport Fader from './Fader'\nimport VUMeter from './VUMeter'\nimport Label from './Label'\nimport LCD from './LCD'\n\nimport styled from 'styled-components'\nimport controlLayout from '../../ControlLayout'\n\nexport const ChannelStrip = styled.div`\n  display: grid;\n  grid-template-rows: repeat(11, 1fr);\n  height: 100%;\n  text-align: center;\n\n  .Header {\n    grid-area: ${controlLayout.$firstGridArea};\n  }\n\n  .Controls {\n    grid-area: ${controlLayout.secondGridArea};\n  }\n\n  .Fader {\n    grid-area: ${controlLayout.$thirdGridArea};\n  }\n\n  .Label {\n    grid-area: ${controlLayout.$fourthGridArea};\n  }\n`\n\nexport default function (props) {\n  return (\n    <ChannelStrip style={props.style}>\n      <div className='Header'>\n        <LCD />\n      </div>\n      <div className='Controls'>\n        <Button>Select</Button>\n        <Button>Solo</Button>\n        <Button>Mute</Button>\n        <VUMeter bars='3' />\n      </div>\n      <div className='Fader'>\n        <Fader />\n      </div>\n      <div className='Label'>\n        <Label>{props.label}</Label>\n      </div>\n    </ChannelStrip>\n  )\n}\n","import React from 'react'\nimport Button from './Button'\nimport Fader from './Fader'\nimport Label from './Label'\n\nimport { ChannelStrip } from './ChannelStrip'\n\nexport default function (props) {\n  return (\n    <ChannelStrip style={props.style}>\n      <div className='Header'>\n        <Button size='medium'>Talk</Button>\n      </div>\n      <div className='Controls'>\n        <Button>Select</Button>\n        <Button>GEQ</Button>\n        <Button>Mute</Button>\n      </div>\n      <div className='Fader'>\n        <Fader />\n      </div>\n      <div className='Label'>\n        <Label>MASTER</Label>\n      </div>\n    </ChannelStrip>\n  )\n}\n","import React from 'react'\n\nimport MixStrip from './MixStrip'\nimport ChannelStrip from './ChannelStrip'\nimport MasterStrip from './MasterStrip'\n\nimport styled from 'styled-components'\nconst MixerComponent = styled.div`\n  height: 100%;\n  width: 100%;\n  display: grid;\n  // grid-template-columns: repeat(8, 1fr);\n  // grid-template-columns: repeat(9, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n  user-select: none;\n\n  .Buttons {\n    grid-area: 1 / 1 / 4 / 2;\n  }\n\n  .Channel-Strip {\n    grid-area: 1 / 2 / 4 / 9;\n  }\n\n  .Master {\n    grid-area: 1 / 9 / 4 / 10;\n  }\n`\n\nconst n_physicalChannelStrips = 16\n// const n_mixes = 16\n\nconst style = {\n  channelStripContainer: {\n    display: 'flex',\n    backgroundColor: 'green',\n    height: '100%'\n  },\n  channelStrip: {\n    flexGrow: 1\n  }\n}\n\nexport default class Mixer extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {}\n  }\n\n  renderChannelStrips () {\n    let elems = []\n    for (let i = 1; i <= n_physicalChannelStrips; i++) {\n      elems.push(<ChannelStrip style={style.channelStrip} key={i} label={i} />)\n    }\n    return elems\n  }\n\n  render () {\n    return (\n      <MixerComponent>\n        <div className='Buttons'>\n          <MixStrip />\n        </div>\n        <div className='Channel-Strip'>\n          <div style={style.channelStripContainer}>\n            {this.renderChannelStrips()}\n          </div>\n        </div>\n        <div className='Master'>\n          <MasterStrip />\n        </div>\n      </MixerComponent>\n    )\n  }\n}\n","import React from 'react'\nimport Mixer from './components/Mixer'\n\nfunction App () {\n  return <Mixer />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}